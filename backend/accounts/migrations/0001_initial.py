# Generated by Django 5.2.1 on 2025-05-14 12:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(max_length=255, verbose_name='full name')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='phone number')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/', verbose_name='profile photo')),
                ('linkedin_profile', models.URLField(blank=True, null=True, verbose_name='LinkedIn profile')),
                ('github_profile', models.URLField(blank=True, null=True, verbose_name='GitHub profile')),
                ('portfolio_website', models.URLField(blank=True, null=True, verbose_name='portfolio website')),
                ('user_type', models.CharField(choices=[('student', 'Student'), ('professional', 'Professional'), ('recruiter', 'Recruiter')], default='student', max_length=20, verbose_name='user type')),
                ('objective', models.TextField(blank=True, null=True, verbose_name='career objective')),
                ('university', models.CharField(blank=True, max_length=255, null=True, verbose_name='university')),
                ('degree', models.CharField(blank=True, max_length=100, null=True, verbose_name='degree')),
                ('graduation_year', models.IntegerField(blank=True, null=True, verbose_name='graduation year')),
                ('cgpa', models.FloatField(blank=True, null=True, verbose_name='CGPA')),
                ('technical_skills', models.TextField(blank=True, null=True, verbose_name='technical skills')),
                ('soft_skills', models.TextField(blank=True, null=True, verbose_name='soft skills')),
                ('projects', models.TextField(blank=True, null=True, verbose_name='projects')),
                ('internships', models.TextField(blank=True, null=True, verbose_name='internships')),
                ('certifications', models.TextField(blank=True, null=True, verbose_name='certifications')),
                ('achievements', models.TextField(blank=True, null=True, verbose_name='achievements')),
                ('job_title', models.CharField(blank=True, max_length=100, null=True, verbose_name='job title')),
                ('organization', models.CharField(blank=True, max_length=100, null=True, verbose_name='organization')),
                ('experience', models.IntegerField(blank=True, null=True, verbose_name='years of experience')),
                ('industry', models.CharField(blank=True, max_length=100, null=True, verbose_name='industry')),
                ('work_experience', models.TextField(blank=True, null=True, verbose_name='work experience')),
                ('extracurricular_activities', models.TextField(blank=True, null=True, verbose_name='extracurricular activities')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='company name')),
                ('company_website', models.URLField(blank=True, null=True, verbose_name='company website')),
                ('company_description', models.TextField(blank=True, null=True, verbose_name='company description')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RecruiterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('company_website', models.URLField(blank=True, null=True)),
                ('company_description', models.TextField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recruiterprofile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
